;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_VertexID              0   x           0   VERTID    uint   x   
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float   xyzw
; Kerare                   0   xyzw        1     NONE   float   xyzw
; Exposure                 0   x           2     NONE   float   x   
;
; shader debug name: 9c3f99a30eab2343463280ff6e8a4a50.pdb
; shader hash: 9c3f99a30eab2343463280ff6e8a4a50
;
; Pipeline Runtime Information: 
;
; Vertex Shader
; OutputPositionPresent=1
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_VertexID              0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; Kerare                   0                 linear       
; Exposure                 0                 linear       
;
; Buffer Definitions:
;
; cbuffer SceneInfo
; {
;
;   struct SceneInfo
;   {
;
;       row_major float4x4 viewProjMat;               ; Offset:    0
;       row_major float3x4 transposeViewMat;          ; Offset:   64
;       row_major float3x4 transposeViewInvMat;       ; Offset:  112
;       float4 projElement[2];                        ; Offset:  160
;       float4 projInvElements[2];                    ; Offset:  192
;       row_major float4x4 viewProjInvMat;            ; Offset:  224
;       row_major float4x4 prevViewProjMat;           ; Offset:  288
;       float3 ZToLinear;                             ; Offset:  352
;       float subdivisionLevel;                       ; Offset:  364
;       float2 screenSize;                            ; Offset:  368
;       float2 screenInverseSize;                     ; Offset:  376
;       float2 cullingHelper;                         ; Offset:  384
;       float cameraNearPlane;                        ; Offset:  392
;       float cameraFarPlane;                         ; Offset:  396
;       float4 viewFrustum[6];                        ; Offset:  400
;       float4 clipplane;                             ; Offset:  496
;       float2 vrsVelocityThreshold;                  ; Offset:  512
;       uint GPUVisibleMask;                          ; Offset:  520
;       uint resolutionRatioPacked;                   ; Offset:  524
;   
;   } SceneInfo;                                      ; Offset:    0 Size:   528
;
; }
;
; cbuffer RangeCompressInfo
; {
;
;   struct RangeCompressInfo
;   {
;
;       float rangeCompress;                          ; Offset:    0
;       float rangeDecompress;                        ; Offset:    4
;       float prevRangeCompress;                      ; Offset:    8
;       float prevRangeDecompress;                    ; Offset:   12
;   
;   } RangeCompressInfo;                              ; Offset:    0 Size:    16
;
; }
;
; cbuffer Tonemap
; {
;
;   struct Tonemap
;   {
;
;       float exposureAdjustment;                     ; Offset:    0
;       float tonemapRange;                           ; Offset:    4
;       float sharpness;                              ; Offset:    8
;       float preTonemapRange;                        ; Offset:   12
;       int useAutoExposure;                          ; Offset:   16
;       float echoBlend;                              ; Offset:   20
;       float AABlend;                                ; Offset:   24
;       float AASubPixel;                             ; Offset:   28
;       float ResponsiveAARate;                       ; Offset:   32
;   
;   } Tonemap;                                        ; Offset:    0 Size:    36
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; SceneInfo                         cbuffer      NA          NA     CB0            cb0     1
; RangeCompressInfo                 cbuffer      NA          NA     CB1            cb1     1
; Tonemap                           cbuffer      NA          NA     CB2            cb2     1
; WhitePtSrv                        texture    byte         r/o      T0             t0     1
;
;
; ViewId state:
;
; Number of inputs: 1, outputs: 9
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0 }
;   output 1 depends on inputs: { 0 }
;   output 4 depends on inputs: { 0 }
;   output 5 depends on inputs: { 0 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:8-i16:16-i32:32-i64:64-f16:16-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%struct.ByteAddressBuffer = type { i32 }
%SceneInfo = type { %class.matrix.float.4.4, %class.matrix.float.3.4, %class.matrix.float.3.4, [2 x <4 x float>], [2 x <4 x float>], %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <2 x float>, <2 x float>, <2 x float>, float, float, [6 x <4 x float>], <4 x float>, <2 x float>, i32, i32 }
%class.matrix.float.3.4 = type { [3 x <4 x float>] }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%RangeCompressInfo = type { float, float, float, float }
%Tonemap = type { float, float, float, float, i32, float, float, float, float }

define void @PreTonemapFullScreenTriangleVS() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind zeroinitializer, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %4 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %5 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 13, i32 36 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %6 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %3, %dx.types.ResourceProperties { i32 13, i32 16 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %7 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %4, %dx.types.ResourceProperties { i32 13, i32 528 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %8 = call i32 @dx.op.loadInput.i32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = shl i32 %8, 1
  %10 = and i32 %9, 2
  %11 = uitofp i32 %10 to float
  %12 = and i32 %8, 2
  %13 = uitofp i32 %12 to float
  %14 = fmul fast float %11, 2.000000e+00
  %15 = fmul fast float %13, 2.000000e+00
  %16 = fadd fast float %14, -1.000000e+00
  %17 = fsub fast float 1.000000e+00, %15
  %18 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %5, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %19 = extractvalue %dx.types.CBufRet.f32 %18, 0
  %20 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %6, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %21 = extractvalue %dx.types.CBufRet.f32 %20, 1
  %22 = fmul fast float %21, %19
  %23 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %5, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %24 = extractvalue %dx.types.CBufRet.i32 %23, 0
  %25 = icmp ne i32 %24, 0
  %26 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  %27 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %26, i32 0, i32 undef, i8 1, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %28 = extractvalue %dx.types.ResRet.i32 %27, 0
  %29 = bitcast i32 %28 to float
  %30 = select i1 %25, float %29, float 1.000000e+00
  %31 = fmul fast float %22, %30
  %32 = call float @dx.op.unary.f32(i32 23, float %31)  ; Log(value)
  %33 = fmul fast float %32, 0x4008151840000000
  %34 = call float @dx.op.unary.f32(i32 26, float %33)  ; Round_ne(value)
  %35 = fmul fast float %34, 0x3FD542A5A0000000
  %36 = call float @dx.op.unary.f32(i32 21, float %35)  ; Exp(value)
  %37 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %7, i32 12)  ; CBufferLoadLegacy(handle,regIndex)
  %38 = extractvalue %dx.types.CBufRet.f32 %37, 0
  %39 = extractvalue %dx.types.CBufRet.f32 %37, 1
  %40 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %7, i32 13)  ; CBufferLoadLegacy(handle,regIndex)
  %41 = extractvalue %dx.types.CBufRet.f32 %40, 0
  %42 = extractvalue %dx.types.CBufRet.f32 %40, 1
  %43 = extractvalue %dx.types.CBufRet.f32 %40, 2
  %44 = extractvalue %dx.types.CBufRet.f32 %40, 3
  %45 = fmul fast float %38, %16
  %46 = fadd fast float %45, %41
  %47 = fmul fast float %39, %17
  %48 = fadd fast float %47, %42
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %16)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %17)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float 0.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %46)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %48)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %43)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %44)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %36)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!11}
!dx.entryPoints = !{!12}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"vs", i32 6, i32 6}
!4 = !{!5, null, !7, null}
!5 = !{!6}
!6 = !{i32 0, %struct.ByteAddressBuffer* undef, !"", i32 0, i32 0, i32 1, i32 11, i32 0, null}
!7 = !{!8, !9, !10}
!8 = !{i32 0, %SceneInfo* undef, !"", i32 0, i32 0, i32 1, i32 528, null}
!9 = !{i32 1, %RangeCompressInfo* undef, !"", i32 0, i32 1, i32 1, i32 16, null}
!10 = !{i32 2, %Tonemap* undef, !"", i32 0, i32 2, i32 1, i32 36, null}
!11 = !{[3 x i32] [i32 1, i32 9, i32 51]}
!12 = !{void ()* @PreTonemapFullScreenTriangleVS, !"PreTonemapFullScreenTriangleVS", !13, !4, !23}
!13 = !{!14, !18, null}
!14 = !{!15}
!15 = !{i32 0, !"SV_VertexID", i8 5, i8 1, !16, i8 0, i32 1, i8 1, i32 0, i8 0, !17}
!16 = !{i32 0}
!17 = !{i32 3, i32 1}
!18 = !{!19, !21, !22}
!19 = !{i32 0, !"SV_Position", i8 9, i8 3, !16, i8 4, i32 1, i8 4, i32 0, i8 0, !20}
!20 = !{i32 3, i32 15}
!21 = !{i32 1, !"Kerare", i8 9, i8 0, !16, i8 2, i32 1, i8 4, i32 1, i8 0, !20}
!22 = !{i32 2, !"Exposure", i8 9, i8 0, !16, i8 2, i32 1, i8 1, i32 2, i8 0, !17}
!23 = !{i32 0, i64 8388880, i32 5, !16}
 